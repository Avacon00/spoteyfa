name: 🚀 Build & Release SPOTEYFA v0.3.0

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 0.3.0)'
        required: true
        default: '0.3.0'
      draft:
        description: 'Create draft release'
        type: boolean
        default: false

env:
  NODE_VERSION: '18'

jobs:
  build:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: win
            arch: x64
            artifact: win-x64
          - os: macos-latest
            platform: mac
            arch: universal
            artifact: mac-universal
          - os: ubuntu-latest
            platform: linux
            arch: x64
            artifact: linux-x64

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Install dependencies
        run: |
          cd 0.3.0
          npm ci --no-audit

      - name: 🔧 Validate package.json
        run: |
          cd 0.3.0
          echo "Validating package.json structure..."
          node -e "
            const pkg = require('./package.json');
            console.log('Package version:', pkg.version);
            console.log('Has build config:', !!pkg.build);
          "

      - name: ⚡ Build application
        shell: ${{ matrix.platform == 'win' && 'cmd' || 'bash' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd 0.3.0
          echo Building SPOTEYFA v0.3.0 for ${{ matrix.platform }}
          npm run build

      - name: 📁 List build outputs
        run: |
          cd 0.3.0
          echo "Build artifacts:"
          if [ -d "dist" ]; then
            ls -la dist/
          else
            echo "No dist directory found"
            ls -la
          fi

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spoteyfa-${{ matrix.artifact }}
          path: |
            0.3.0/dist/*.exe
            0.3.0/dist/*.dmg
            0.3.0/dist/*.zip
            0.3.0/dist/*.AppImage
            0.3.0/dist/*.deb
          if-no-files-found: warn

  release:
    name: 🎁 Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 📁 List all artifacts
        run: |
          echo "Downloaded artifacts:"
          find artifacts -type f -exec ls -la {} \;

      - name: 🎁 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "🎵 SPOTEYFA ${{ github.ref_name }} - The Performance Revolution"
          body: |
            # 🎵 SPOTEYFA ${{ github.ref_name }} - The Performance Revolution
            
            ## 🚀 Cross-Platform Release
            
            ### ✨ What's New in v0.3.0
            - **⚡ 50% Performance Boost** - Memory optimized from 95MB to 47MB
            - **🎯 Drag & Drop** - Intuitive window positioning
            - **🖥️ Multi-Monitor Support** - Perfect positioning across displays  
            - **⏰ Sleep Timer** - Auto-close with fade-out
            - **🌍 Internationalization** - Full German/English support
            - **🔄 Auto-Update** - Seamless update mechanism
            
            ### 📦 Download Options
            
            **🪟 Windows**
            - Setup Installer (NSIS) - Traditional Windows installation
            - Portable EXE - No installation required
            
            **🍎 macOS** 
            - Universal DMG - Drag & Drop installation for Intel/Apple Silicon
            - Portable ZIP - App bundle for manual extraction
            
            **🐧 Linux**
            - AppImage - Universal Linux executable
            - DEB Package - Debian/Ubuntu installation
            
            ## 🚀 Quick Start
            1. Download your platform's version
            2. Install or run directly (portable versions)
            3. Complete the setup wizard for Spotify integration
            4. Enjoy your Apple-style music experience!
            
            ---
            
            **🎵 Experience the Performance Revolution with SPOTEYFA!** ✨
          files: |
            artifacts/**/*
          draft: ${{ github.event.inputs.draft == 'true' }}
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}